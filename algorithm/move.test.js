const { moveWhite, moveBlack } = require("./move");

test('should return cero', () => {

    expect(moveWhite([],0)).toStrictEqual({value: 0})
});

test('should return white pawn eat black queen', () => {
    let matriz = 
    [
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ','q', ' ', 'p', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', 'P', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        ['P', 'P', 'P', 'P','P', ' ', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
    ]

    expect(moveWhite(matriz,3)).toStrictEqual(
        {
            value: 210,
            from_row: 9,
            from_col: 5,
            to_row: 8,
            to_col: 4,
        }
    );
});

test('should return white queen eat black rook', () => {
    let matriz = 
    [
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', 'q',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ','q', ' ', 'r', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', 'Q', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        ['P', 'P', 'P', 'P','P', ' ', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
    ]

    expect(moveWhite(matriz,3)).toStrictEqual(
        {
            from_row: 7,
            from_col: 5,
            to_row: 6,
            to_col: 6,
            value: 600.5,
        }
    );
});

test('should return white rook eat black rook', () => {
    let matriz = 
    [
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        ['h', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ','R', ' ', ' ', 'q'],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', 'q', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ','r', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', 'P', ' ',' ', ' ', ' ', ' '],
        [' ', 'P', ' ', ' ',' ', ' ', ' ', ' ',' ', 'P', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', 'P',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        ['P', ' ', 'P', 'P','P', ' ', 'P', ' ','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['R', 'R', ' ', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
    ]

    expect(moveWhite(matriz,3)).toStrictEqual(
        {
            from_row: 6,
            from_col: 12,
            to_row: 8,
            to_col: 12,
            value: 620,
        }
    );
});

test('should return white horse eat black king', () => {
    let matriz = 
    [
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', 'b', ' ', 'r','q', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', 'H', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', 'q', ' ', 'k',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        ['P', 'P', 'P', 'P','P', ' ', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
    ]

    expect(moveWhite(matriz,3)).toStrictEqual(
        {
            from_row: 7,
            from_col: 2,
            to_row: 9,
            to_col: 3,
            value: 830,
        }
    );
});

test('should return white bishop eat black rook', () => {
    let matriz = 
    [
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        [' ', ' ', 'r', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', 'h',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', 'B', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        ['P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
    ]

    expect(moveWhite(matriz,3)).toStrictEqual(
        {
            from_row: 7,
            from_col: 5,
            to_row: 4,
            to_col: 2,
            value: 330,
        }
    );
});

test('should return white king eat black rook', () => {
    let matriz = 
    [
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['r', 'r', 'h', 'h','b', 'b', 'q', 'q','k', 'k', 'b', 'b','h', 'h', 'r', 'r'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        ['p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p','p', 'p', 'p', 'p'],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ','p', 'p', 'r', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ','b', 'K', 'b', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ','q', 'h', 'r', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        [' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' ',' ', ' ', ' ', ' '],
        ['P', 'P', 'P', 'P','P', ' ', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P','P', 'P', 'P', 'P'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
        ['R', 'R', 'H', 'H','B', 'B', 'Q', 'Q','K', 'K', 'B', 'B','H', 'H', 'R', 'R'],
    ]

    expect(moveWhite(matriz,3)).toStrictEqual(
        {
            from_row: 7,
            from_col: 5,
            to_row: 8,
            to_col: 6,
            value: 841,
        }
    );
});
